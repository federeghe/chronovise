cmake_minimum_required(VERSION 3.5)

project(ui VERSION 0.1 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# QtCreator supports the following variables for Android, which are identical to qmake Android variables.
# Check https://doc.qt.io/qt/deployment-android.html for more information.
# They need to be set before the find_package( ...) calls below.

#if(ANDROID)
#    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
#    if (ANDROID_ABI STREQUAL "armeabi-v7a")
#        set(ANDROID_EXTRA_LIBS
#            ${CMAKE_CURRENT_SOURCE_DIR}/path/to/libcrypto.so
#            ${CMAKE_CURRENT_SOURCE_DIR}/path/to/libssl.so)
#    endif()
#endif()

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets REQUIRED)
find_package(Qt5Charts)
find_package(Qt5Svg)




#add_library(chronovise SHARED IMPORTED GLOBAL)
#set_target_properties( chronovise PROPERTIES
#             IMPORTED_LOCATION ../../build/libchronovise.a)


find_package(Ceres REQUIRED)


find_library(chronovise chronovise)



set(PROJECT_SOURCES

        main.cpp
        chronovise_helper.cpp
        chronovise_helper.h
        mainwindow.cpp
        mainwindow.h
        mainwindow.ui
        utility.h
)




if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
    qt_add_executable(ui
        MANUAL_FINALIZATION
        ${PROJECT_SOURCES}
    )
else()
    if(ANDROID)
        add_library(ui SHARED
            ${PROJECT_SOURCES}
        )
    else()
        add_executable(ui
            ${PROJECT_SOURCES}
        )
    endif()
endif()

target_link_libraries(ui PRIVATE chronovise)
include_directories(${CERES_INCLUDE_DIRS})
target_link_libraries (ui PRIVATE ${CERES_LIBRARIES})

target_link_libraries(ui PUBLIC Qt${QT_VERSION_MAJOR}::Widgets Qt5::Charts Qt5::Svg)

set_target_properties(ui PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
)

if(QT_VERSION_MAJOR EQUAL 6)
    qt_finalize_executable(ui)
endif()
